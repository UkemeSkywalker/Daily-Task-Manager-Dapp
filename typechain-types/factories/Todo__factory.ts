/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Todo, TodoInterface } from "../Todo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemTitle_",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "todoCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemTitle_",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "todoMarkedAsDone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_itemTitle",
        type: "string",
      },
      {
        internalType: "string",
        name: "_creator",
        type: "string",
      },
    ],
    name: "createTodo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "itemTitle",
            type: "string",
          },
          {
            internalType: "string",
            name: "creator",
            type: "string",
          },
          {
            internalType: "bool",
            name: "checked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct todo.todoItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "deleteTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_itemTitle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "editTodo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "itemTitle",
            type: "string",
          },
          {
            internalType: "string",
            name: "creator",
            type: "string",
          },
          {
            internalType: "bool",
            name: "checked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct todo.todoItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "markAsDone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "showAllTodo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "itemTitle",
            type: "string",
          },
          {
            internalType: "string",
            name: "creator",
            type: "string",
          },
          {
            internalType: "bool",
            name: "checked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct todo.todoItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type TodoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Todo__factory extends ContractFactory {
  constructor(...args: TodoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Todo> {
    return super.deploy(overrides || {}) as Promise<Todo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Todo {
    return super.attach(address) as Todo;
  }
  override connect(signer: Signer): Todo__factory {
    return super.connect(signer) as Todo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoInterface {
    return new utils.Interface(_abi) as TodoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Todo {
    return new Contract(address, _abi, signerOrProvider) as Todo;
  }
}
